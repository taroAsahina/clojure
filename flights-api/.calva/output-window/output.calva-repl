; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/user1/practice/clojure/flights-api; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:36749 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: project.clj
; 
; Syntax error compiling at (project.clj:1:1).
; Unable to resolve symbol: defproject in this context
; Evaluation of file project.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉user꞉> 
; Syntax error compiling at (project.clj:1:1).
; Unable to resolve symbol: defproject in this context
clj꞉user꞉> 
nil
clj꞉flights-api.handler.v1.systems꞉> 
; Syntax error compiling at (src/flights_api/handler/v1/systems.clj:9:1).
; No such namespace: ig
clj꞉flights-api.handler.v1.systems꞉> 
nil
clj꞉flights-api.handler.v1.systems꞉> 
; Syntax error compiling at (src/flights_api/handler/v1/systems.clj:10:1).
; Unable to resolve symbol: ping in this context
clj꞉flights-api.handler.v1.systems꞉> 
; Evaluating file: systems.clj
#multifn[init-key 0x498638e6]
clj꞉flights-api.handler.v1.systems꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/user1/practice/clojure/flights-api; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +dev repl :headless)
; Using host:port 127.0.0.1:43185 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(dev)
:loaded
clj꞉dev꞉> 
(go)
; :duct.server.http.jetty/starting-server {:port 3000}
:initiated
clj꞉dev꞉> 
(halt)
; :duct.server.http.jetty/stopping-server
(monitor-exit)
clj꞉dev꞉> 
:halted
; Execution error (NullPointerException) at dev/eval24799 (REPL:100).
; Cannot exit synchronized block because "null" is null
clj꞉dev꞉> 
(exit)
; Syntax error compiling at (.calva/output-window/output.calva-repl:104:1).
; Unable to resolve symbol: exit in this context
clj꞉dev꞉> 
